<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
   http://www.springframework.org/schema/data/jpa
   http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- ========================================================== -->
    <!-- Import -->
    <!-- ========================================================== -->
    <import resource="fake.xml"/>
    <import resource="applicationContext-security.xml"/>
    <import resource="ds.xml"/>

    <!-- ========================================================== -->
    <!-- General -->
    <!-- ========================================================== -->
    <context:component-scan base-package = "com.test.ishop" />
    <mvc:resources mapping="/js/**" location="/templates/js/"/>
    <!--<mvc:resources mapping="/login" location="/templates/login"/>-->
    <mvc:annotation-driven/>
    <mvc:view-controller path="/login" view-name="login"/>
    <!--Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired and so on-->
    <context:annotation-config/>

    <!-- ========================================================== -->
    <!-- JSP Configuration -->
    <!-- ========================================================== -->
    <bean class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name = "prefix" value = "/templates/" />
        <property name = "suffix" value = ".jsp" />
    </bean>

    <!-- EntityManagerFactory-->
    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--поиск сущностей в этом пакете-->
        <property name="packagesToScan" value="com.test.ishop.domain" />
        <!--Поставщик данных - hibernate-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="show_sql">true</prop>
            </props>
        </property>
    </bean>
    <!-- This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access.
        JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryBean" />
    </bean>
    <!-- Need for Repository abstraction -->
    <jpa:repositories base-package="com.test.ishop.repos" entity-manager-factory-ref="entityManagerFactoryBean"
                      transaction-manager-ref="transactionManager" />
    <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management;
         such as when @Transactional methods are invoked -->
    <tx:annotation-driven />

    <!-- ========================================================== -->
    <!-- End -->
    <!-- ========================================================== -->

</beans>